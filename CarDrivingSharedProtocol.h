#pragma once

//#define		MAGIC_ID_COUNT					4
//const static uint8	g_HeaderCode[MAGIC_ID_COUNT] = { 0x80,0x63,0x68,0x55 };
//#define		ASSIGN_MAGIC_ID(Data)			memcpy(Data, g_HeaderCode,MAGIC_ID_SIZE);
#include	"SharedProtocolCommonDefine.h"
#include	"CarDrivingMessageList.h"

#define		CAR_DRIVING_SERVER_NETWORK_MESSAGE_VERSION			1
#define		CAR_DRIVING_SERVER_NETWORK_TARGET_PORT				2978

//data
#define		CAR_A_TO_B_DATA_LENGTH			80

//=====================================
LAZY_MESSAGE_HEADER_STAR(eCDNM_S2C_TELL_SERVER_WHO_YOU_ARE_REQUEST)
	int	iVersion;
LAZY_MESSAGE_HEADER_END(eCDNM_S2C_TELL_SERVER_WHO_YOU_ARE_REQUEST)

LAZY_RESULT_MESSAGE_HEADER_STAR(eCDNM_C2S_TELL_SERVER_WHO_YOU_ARE_RESULT)
	int	iCarID;
	int	iVersion;
LAZY_RESULT_MESSAGE_HEADER_END(eCDNM_C2S_TELL_SERVER_WHO_YOU_ARE_RESULT)

LAZY_MESSAGE_HEADER_STAR(eCDNM_C2S_CAR_STATUS)
	int	iCarID;
	int	iTagID;
	int	i1Status;//eCarSendingStatus
LAZY_MESSAGE_HEADER_END(eCDNM_C2S_CAR_STATUS)

LAZY_MESSAGE_HEADER_STAR(eCDNM_S2C_CAR_GO_TO_DESTINATION_REQUEST)
	int		iCount;//or do if Tag ID is -1 end?,2
	int		iCarID;
	int16	i16TagIDArray[CAR_A_TO_B_DATA_LENGTH];//160
	int16	i16SpeedArray[CAR_A_TO_B_DATA_LENGTH];
	int16	i16AngleTypeArray[CAR_A_TO_B_DATA_LENGTH];
	int16	i16DistanceArray[CAR_A_TO_B_DATA_LENGTH];
LAZY_MESSAGE_HEADER_END(eCDNM_S2C_CAR_GO_TO_DESTINATION_REQUEST)

LAZY_RESULT_MESSAGE_HEADER_STAR(eCDNM_C2S_CAR_GO_TO_DESTINATION_RESULT)
	int	iCarID;
	int	iCount;
LAZY_RESULT_MESSAGE_HEADER_END(eCDNM_C2S_CAR_GO_TO_DESTINATION_RESULT)